{"ast":null,"code":"var _jsxFileName = \"/Users/navneet/Desktop/my-app/src/chart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst options = {\n  theme: \"light2\",\n  // \"light1\", \"light2\", \"dark1\", \"dark2\"\n  animationEnabled: true,\n  exportEnabled: true,\n  title: {\n    text: \"Intel Corporation Stock Price -  2017\"\n  },\n  axisX: {\n    valueFormatString: \"MMM\"\n  },\n  axisY: {\n    includeZero: false,\n    prefix: \"$\",\n    title: \"Price (in USD)\"\n  },\n  data: [{\n    type: \"candlestick\",\n    showInLegend: true,\n    name: \"Intel Corporation\",\n    yValueFormatString: \"$###0.00\",\n    xValueFormatString: \"MMMM YYYY\",\n    dataPoints: [{\n      x: new Date(\"2017-01-01\"),\n      y: [36.61, 38.45, 36.19, 36.82]\n    }, {\n      x: new Date(\"2017-02-01\"),\n      y: [36.82, 36.95, 34.84, 36.20]\n    }, {\n      x: new Date(\"2017-03-01\"),\n      y: [35.85, 36.30, 34.66, 36.07]\n    }, {\n      x: new Date(\"2017-04-01\"),\n      y: [36.19, 37.50, 35.21, 36.15]\n    }, {\n      x: new Date(\"2017-05-01\"),\n      y: [36.11, 37.17, 35.02, 36.11]\n    }, {\n      x: new Date(\"2017-06-01\"),\n      y: [36.12, 36.57, 33.34, 33.74]\n    }, {\n      x: new Date(\"2017-07-01\"),\n      y: [33.51, 35.86, 33.23, 35.47]\n    }, {\n      x: new Date(\"2017-08-01\"),\n      y: [35.66, 36.70, 34.38, 35.07]\n    }, {\n      x: new Date(\"2017-09-01\"),\n      y: [35.24, 38.15, 34.93, 38.08]\n    }, {\n      x: new Date(\"2017-10-01\"),\n      y: [38.12, 45.80, 38.08, 45.49]\n    }, {\n      x: new Date(\"2017-11-01\"),\n      y: [45.97, 47.30, 43.77, 44.84]\n    }, {\n      x: new Date(\"2017-12-01\"),\n      y: [44.73, 47.64, 42.67, 46.16]\n    }]\n  }]\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertMiliseconds = (miliseconds, format) => {\n      var days, hours, minutes, seconds, total_hours, total_minutes, total_seconds;\n      total_seconds = parseInt(Math.floor(miliseconds / 1000));\n      total_minutes = parseInt(Math.floor(total_seconds / 60));\n      total_hours = parseInt(Math.floor(total_minutes / 60));\n      days = parseInt(Math.floor(total_hours / 24));\n      seconds = parseInt(total_seconds % 60);\n      minutes = parseInt(total_minutes % 60);\n      hours = parseInt(total_hours % 24);\n\n      switch (format) {\n        case 's':\n          return total_seconds;\n\n        case 'm':\n          return total_minutes;\n\n        case 'h':\n          return total_hours;\n\n        case 'd':\n          return days;\n\n        default:\n          return {\n            d: days,\n            h: hours,\n            m: minutes,\n            s: seconds\n          };\n      }\n    };\n\n    this.state = {\n      candleData: [],\n      options: options\n    };\n  }\n\n  componentDidMount() {\n    // fetch(\"https://public.coindcx.com/exchange/v1/markets_details\")\n    // .then(result => result.json()).then(response => {console.log(\"response\", response);\n    //     // this.setState({user : user})\n    // })\n    const apiDummyData = [{\n      \"open\": 6683.24,\n      \"high\": 6684.98,\n      \"low\": 6681.15,\n      \"volume\": 10.796612,\n      \"close\": 6684.35,\n      \"time\": 1586771820000\n    }, {\n      \"open\": 6682.71,\n      \"high\": 6683.61,\n      \"low\": 6679.34,\n      \"volume\": 37.627571,\n      \"close\": 6683.24,\n      \"time\": 1586771760000\n    }, {\n      \"open\": 6683.33,\n      \"high\": 6686.81,\n      \"low\": 6681.4,\n      \"volume\": 26.558738,\n      \"close\": 6683.53,\n      \"time\": 1586771700000\n    }, {\n      \"open\": 6681.38,\n      \"high\": 6687,\n      \"low\": 6680.82,\n      \"volume\": 46.546386,\n      \"close\": 6683.32,\n      \"time\": 1586771640000\n    }, {\n      \"open\": 6677.52,\n      \"high\": 6682,\n      \"low\": 6677.26,\n      \"volume\": 24.203536,\n      \"close\": 6681.37,\n      \"time\": 1586771580000\n    }, {\n      \"open\": 6682.54,\n      \"high\": 6682.54,\n      \"low\": 6677,\n      \"volume\": 33.415822,\n      \"close\": 6677.33,\n      \"time\": 1586771520000\n    }];\n    let chartDummyData = apiDummyData.forEach(val => {\n      return {\n        x: new Date(\"2017-01-01\"),\n        y: [val.open, val.high, val.low, val.close]\n      };\n    });\n    console.log(\"data\", chartDummyData);\n  }\n\n  render() {\n    // console.log(\"sec\",this.convertMiliseconds(1586761320000));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: this.state.options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/navneet/Desktop/my-app/src/chart.js"],"names":["React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","options","theme","animationEnabled","exportEnabled","title","text","axisX","valueFormatString","axisY","includeZero","prefix","data","type","showInLegend","name","yValueFormatString","xValueFormatString","dataPoints","x","Date","y","Chart","constructor","props","convertMiliseconds","miliseconds","format","days","hours","minutes","seconds","total_hours","total_minutes","total_seconds","parseInt","Math","floor","d","h","m","s","state","candleData","componentDidMount","apiDummyData","chartDummyData","forEach","val","open","high","low","close","console","log","render","ref","chart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE,QADK;AACK;AACjBC,EAAAA,gBAAgB,EAAE,IAFN;AAGZC,EAAAA,aAAa,EAAE,IAHH;AAIZC,EAAAA,KAAK,EAAC;AACFC,IAAAA,IAAI,EAAE;AADJ,GAJM;AAOZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,iBAAiB,EAAE;AADhB,GAPK;AAUZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAC,KADT;AAEHC,IAAAA,MAAM,EAAE,GAFL;AAGHN,IAAAA,KAAK,EAAE;AAHJ,GAVK;AAeZO,EAAAA,IAAI,EAAE,CAAC;AACHC,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,YAAY,EAAE,IAFX;AAGHC,IAAAA,IAAI,EAAE,mBAHH;AAIHC,IAAAA,kBAAkB,EAAE,UAJjB;AAKHC,IAAAA,kBAAkB,EAAE,WALjB;AAMHC,IAAAA,UAAU,EAAE,CACR;AAAEC,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KADQ,EAER;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAFQ,EAGR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAHQ,EAIR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAJQ,EAKR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KALQ,EAMR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KANQ,EAOR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAPQ,EAQR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KARQ,EASR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KATQ,EAUR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAVQ,EAWR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAXQ,EAYR;AAAEF,MAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,MAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB;AAAhC,KAZQ;AANT,GAAD;AAfM,CAAhB;;AAuCA,MAAMC,KAAN,SAAoBzB,SAApB,CAA8B;AAC1B0B,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,kBARkB,GAQG,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAC1C,UAAIC,IAAJ,EAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,aAAhD,EAA+DC,aAA/D;AAEAA,MAAAA,aAAa,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWX,WAAW,GAAG,IAAzB,CAAD,CAAxB;AACAO,MAAAA,aAAa,GAAGE,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAG,EAA3B,CAAD,CAAxB;AACAF,MAAAA,WAAW,GAAGG,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWJ,aAAa,GAAG,EAA3B,CAAD,CAAtB;AACAL,MAAAA,IAAI,GAAGO,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWL,WAAW,GAAG,EAAzB,CAAD,CAAf;AAEAD,MAAAA,OAAO,GAAGI,QAAQ,CAACD,aAAa,GAAG,EAAjB,CAAlB;AACAJ,MAAAA,OAAO,GAAGK,QAAQ,CAACF,aAAa,GAAG,EAAjB,CAAlB;AACAJ,MAAAA,KAAK,GAAGM,QAAQ,CAACH,WAAW,GAAG,EAAf,CAAhB;;AAEA,cAAOL,MAAP;AACE,aAAK,GAAL;AACI,iBAAOO,aAAP;;AACJ,aAAK,GAAL;AACI,iBAAOD,aAAP;;AACJ,aAAK,GAAL;AACI,iBAAOD,WAAP;;AACJ,aAAK,GAAL;AACI,iBAAOJ,IAAP;;AACJ;AACI,iBAAO;AAAEU,YAAAA,CAAC,EAAEV,IAAL;AAAWW,YAAAA,CAAC,EAAEV,KAAd;AAAqBW,YAAAA,CAAC,EAAEV,OAAxB;AAAiCW,YAAAA,CAAC,EAAEV;AAApC,WAAP;AAVN;AAYH,KAhCiB;;AAEd,SAAKW,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAG,EADJ;AAET1C,MAAAA,OAAO,EAAGA;AAFD,KAAb;AAIH;;AA4BD2C,EAAAA,iBAAiB,GAAE;AACf;AACA;AACA;AACA;AACA,UAAMC,YAAY,GAAG,CAAC;AAClB,cAAQ,OADU;AAElB,cAAQ,OAFU;AAGlB,aAAO,OAHW;AAIlB,gBAAU,SAJQ;AAKlB,eAAS,OALS;AAMlB,cAAQ;AANU,KAAD,EAQrB;AACI,cAAQ,OADZ;AAEI,cAAQ,OAFZ;AAGI,aAAO,OAHX;AAII,gBAAU,SAJd;AAKI,eAAS,OALb;AAMI,cAAQ;AANZ,KARqB,EAgBrB;AACI,cAAQ,OADZ;AAEI,cAAQ,OAFZ;AAGI,aAAO,MAHX;AAII,gBAAU,SAJd;AAKI,eAAS,OALb;AAMI,cAAQ;AANZ,KAhBqB,EAwBrB;AACI,cAAQ,OADZ;AAEI,cAAQ,IAFZ;AAGI,aAAO,OAHX;AAII,gBAAU,SAJd;AAKI,eAAS,OALb;AAMI,cAAQ;AANZ,KAxBqB,EAgCrB;AACI,cAAQ,OADZ;AAEI,cAAQ,IAFZ;AAGI,aAAO,OAHX;AAII,gBAAU,SAJd;AAKI,eAAS,OALb;AAMI,cAAQ;AANZ,KAhCqB,EAwCrB;AACI,cAAQ,OADZ;AAEI,cAAQ,OAFZ;AAGI,aAAO,IAHX;AAII,gBAAU,SAJd;AAKI,eAAS,OALb;AAMI,cAAQ;AANZ,KAxCqB,CAArB;AAiDA,QAAIC,cAAc,GAAGD,YAAY,CAACE,OAAb,CAAsBC,GAAD,IAAS;AAC3B,aAAO;AAAE7B,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,YAAT,CAAL;AAA6BC,QAAAA,CAAC,EAAE,CAAC2B,GAAG,CAACC,IAAL,EAAWD,GAAG,CAACE,IAAf,EAAqBF,GAAG,CAACG,GAAzB,EAA8BH,GAAG,CAACI,KAAlC;AAAhC,OAAP;AACH,KAFA,CAArB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,cAApB;AACH;;AAEJS,EAAAA,MAAM,GAAG;AACF;AACN,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAI,KAAKb,KAAL,CAAWzC,OAArC;AACC,MAAA,KAAK,EAAEuD,GAAG,IAAI,KAAKC,KAAL,GAAaD,GAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA;AAQA;;AA1G4B;;AA4G9B,eAAelC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst options = {\n    theme: \"light2\", // \"light1\", \"light2\", \"dark1\", \"dark2\"\n    animationEnabled: true,\n    exportEnabled: true,\n    title:{\n        text: \"Intel Corporation Stock Price -  2017\"\n    },\n    axisX: {\n        valueFormatString: \"MMM\"\n    },\n    axisY: {\n        includeZero:false,\n        prefix: \"$\",\n        title: \"Price (in USD)\"\n    },\n    data: [{\n        type: \"candlestick\",\n        showInLegend: true,\n        name: \"Intel Corporation\",\n        yValueFormatString: \"$###0.00\",\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: [\n            { x: new Date(\"2017-01-01\"), y: [36.61, 38.45, 36.19, 36.82] },\n            { x: new Date(\"2017-02-01\"), y: [36.82, 36.95, 34.84, 36.20] },\n            { x: new Date(\"2017-03-01\"), y: [35.85, 36.30, 34.66, 36.07] },\n            { x: new Date(\"2017-04-01\"), y: [36.19, 37.50, 35.21, 36.15] },\n            { x: new Date(\"2017-05-01\"), y: [36.11, 37.17, 35.02, 36.11] },\n            { x: new Date(\"2017-06-01\"), y: [36.12, 36.57, 33.34, 33.74] },\n            { x: new Date(\"2017-07-01\"), y: [33.51, 35.86, 33.23, 35.47] },\n            { x: new Date(\"2017-08-01\"), y: [35.66, 36.70, 34.38, 35.07] },\n            { x: new Date(\"2017-09-01\"), y: [35.24, 38.15, 34.93, 38.08] },\n            { x: new Date(\"2017-10-01\"), y: [38.12, 45.80, 38.08, 45.49] },\n            { x: new Date(\"2017-11-01\"), y: [45.97, 47.30, 43.77, 44.84] },\n            { x: new Date(\"2017-12-01\"), y: [44.73, 47.64, 42.67, 46.16] }\n        ]\n    }\n  ]\n}\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            candleData : [],\n            options : options\n        }\n    }\n\n    convertMiliseconds = (miliseconds, format) => {\n        var days, hours, minutes, seconds, total_hours, total_minutes, total_seconds;\n        \n        total_seconds = parseInt(Math.floor(miliseconds / 1000));\n        total_minutes = parseInt(Math.floor(total_seconds / 60));\n        total_hours = parseInt(Math.floor(total_minutes / 60));\n        days = parseInt(Math.floor(total_hours / 24));\n      \n        seconds = parseInt(total_seconds % 60);\n        minutes = parseInt(total_minutes % 60);\n        hours = parseInt(total_hours % 24);\n        \n        switch(format) {\n          case 's':\n              return total_seconds;\n          case 'm':\n              return total_minutes;\n          case 'h':\n              return total_hours;\n          case 'd':\n              return days;\n          default:\n              return { d: days, h: hours, m: minutes, s: seconds };\n        }\n    }\n    \n    componentDidMount(){\n        // fetch(\"https://public.coindcx.com/exchange/v1/markets_details\")\n        // .then(result => result.json()).then(response => {console.log(\"response\", response);\n        //     // this.setState({user : user})\n        // })\n        const apiDummyData = [{\n            \"open\": 6683.24,\n            \"high\": 6684.98,\n            \"low\": 6681.15,\n            \"volume\": 10.796612,\n            \"close\": 6684.35,\n            \"time\": 1586771820000\n        },\n        {\n            \"open\": 6682.71,\n            \"high\": 6683.61,\n            \"low\": 6679.34,\n            \"volume\": 37.627571,\n            \"close\": 6683.24,\n            \"time\": 1586771760000\n        },\n        {\n            \"open\": 6683.33,\n            \"high\": 6686.81,\n            \"low\": 6681.4,\n            \"volume\": 26.558738,\n            \"close\": 6683.53,\n            \"time\": 1586771700000\n        },\n        {\n            \"open\": 6681.38,\n            \"high\": 6687,\n            \"low\": 6680.82,\n            \"volume\": 46.546386,\n            \"close\": 6683.32,\n            \"time\": 1586771640000\n        },\n        {\n            \"open\": 6677.52,\n            \"high\": 6682,\n            \"low\": 6677.26,\n            \"volume\": 24.203536,\n            \"close\": 6681.37,\n            \"time\": 1586771580000\n        },\n        {\n            \"open\": 6682.54,\n            \"high\": 6682.54,\n            \"low\": 6677,\n            \"volume\": 33.415822,\n            \"close\": 6677.33,\n            \"time\": 1586771520000\n        }];\n\n        let chartDummyData = apiDummyData.forEach((val) => {\n                                return({ x: new Date(\"2017-01-01\"), y: [val.open, val.high, val.low, val.close] });\n                            });  \n                            \n        console.log(\"data\", chartDummyData);\n    }\n\n\trender() {\n        // console.log(\"sec\",this.convertMiliseconds(1586761320000));\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {this.state.options}\n\t\t\t\tonRef={ref => this.chart = ref}\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n\t}\n}\nexport default Chart;                             "]},"metadata":{},"sourceType":"module"}