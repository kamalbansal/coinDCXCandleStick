{"ast":null,"code":"var _jsxFileName = \"/Users/navneet/Desktop/my-app/src/chart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst options = {\n  theme: \"light2\",\n  // \"light1\", \"light2\", \"dark1\", \"dark2\"\n  animationEnabled: true,\n  exportEnabled: true,\n  title: {\n    text: \"Intel Corporation Stock Price -  2017\"\n  },\n  axisX: {\n    valueFormatString: \"MMM\"\n  },\n  axisY: {\n    includeZero: false,\n    prefix: \"$\",\n    title: \"Price (in USD)\"\n  },\n  data: [{\n    type: \"candlestick\",\n    showInLegend: true,\n    name: \"Intel Corporation\",\n    yValueFormatString: \"$###0.00\",\n    xValueFormatString: \"MMMM YYYY\",\n    dataPoints: [{\n      x: new Date(\"2017-01-01\"),\n      y: [36.61, 38.45, 36.19, 36.82]\n    }, {\n      x: new Date(\"2017-02-01\"),\n      y: [36.82, 36.95, 34.84, 36.20]\n    }, {\n      x: new Date(\"2017-03-01\"),\n      y: [35.85, 36.30, 34.66, 36.07]\n    }, {\n      x: new Date(\"2017-04-01\"),\n      y: [36.19, 37.50, 35.21, 36.15]\n    }, {\n      x: new Date(\"2017-05-01\"),\n      y: [36.11, 37.17, 35.02, 36.11]\n    }, {\n      x: new Date(\"2017-06-01\"),\n      y: [36.12, 36.57, 33.34, 33.74]\n    }, {\n      x: new Date(\"2017-07-01\"),\n      y: [33.51, 35.86, 33.23, 35.47]\n    }, {\n      x: new Date(\"2017-08-01\"),\n      y: [35.66, 36.70, 34.38, 35.07]\n    }, {\n      x: new Date(\"2017-09-01\"),\n      y: [35.24, 38.15, 34.93, 38.08]\n    }, {\n      x: new Date(\"2017-10-01\"),\n      y: [38.12, 45.80, 38.08, 45.49]\n    }, {\n      x: new Date(\"2017-11-01\"),\n      y: [45.97, 47.30, 43.77, 44.84]\n    }, {\n      x: new Date(\"2017-12-01\"),\n      y: [44.73, 47.64, 42.67, 46.16]\n    }]\n  }]\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      candleData: [],\n      options: options\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://public.coindcx.com/market_data/candles?pair=B-BTC_USDT&interval=15m&limit=100\").then(result => result.json()).then(response => {\n      console.log(\"response\", response); // this.setState({user : user})\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: this.state.options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/navneet/Desktop/my-app/src/chart.js"],"names":["React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","options","theme","animationEnabled","exportEnabled","title","text","axisX","valueFormatString","axisY","includeZero","prefix","data","type","showInLegend","name","yValueFormatString","xValueFormatString","dataPoints","x","Date","y","Chart","constructor","props","state","candleData","componentDidMount","fetch","then","result","json","response","console","log","render","ref","chart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst options = {\n    theme: \"light2\", // \"light1\", \"light2\", \"dark1\", \"dark2\"\n    animationEnabled: true,\n    exportEnabled: true,\n    title:{\n        text: \"Intel Corporation Stock Price -  2017\"\n    },\n    axisX: {\n        valueFormatString: \"MMM\"\n    },\n    axisY: {\n        includeZero:false,\n        prefix: \"$\",\n        title: \"Price (in USD)\"\n    },\n    data: [{\n        type: \"candlestick\",\n        showInLegend: true,\n        name: \"Intel Corporation\",\n        yValueFormatString: \"$###0.00\",\n        xValueFormatString: \"MMMM YYYY\",\n        dataPoints: [\n            { x: new Date(\"2017-01-01\"), y: [36.61, 38.45, 36.19, 36.82] },\n            { x: new Date(\"2017-02-01\"), y: [36.82, 36.95, 34.84, 36.20] },\n            { x: new Date(\"2017-03-01\"), y: [35.85, 36.30, 34.66, 36.07] },\n            { x: new Date(\"2017-04-01\"), y: [36.19, 37.50, 35.21, 36.15] },\n            { x: new Date(\"2017-05-01\"), y: [36.11, 37.17, 35.02, 36.11] },\n            { x: new Date(\"2017-06-01\"), y: [36.12, 36.57, 33.34, 33.74] },\n            { x: new Date(\"2017-07-01\"), y: [33.51, 35.86, 33.23, 35.47] },\n            { x: new Date(\"2017-08-01\"), y: [35.66, 36.70, 34.38, 35.07] },\n            { x: new Date(\"2017-09-01\"), y: [35.24, 38.15, 34.93, 38.08] },\n            { x: new Date(\"2017-10-01\"), y: [38.12, 45.80, 38.08, 45.49] },\n            { x: new Date(\"2017-11-01\"), y: [45.97, 47.30, 43.77, 44.84] },\n            { x: new Date(\"2017-12-01\"), y: [44.73, 47.64, 42.67, 46.16] }\n        ]\n    }\n  ]\n}\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            candleData : [],\n            options : options\n        }\n    }\n    \n    componentDidMount(){\n        fetch(\"https://public.coindcx.com/market_data/candles?pair=B-BTC_USDT&interval=15m&limit=100\")\n        .then(result => result.json()).then(response => {console.log(\"response\", response);\n            // this.setState({user : user})\n        })\n    }\n\n\trender() {\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {this.state.options}\n\t\t\t\tonRef={ref => this.chart = ref}\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n\t}\n}\nexport default Chart;                             "]},"metadata":{},"sourceType":"module"}