{"ast":null,"code":"var _jsxFileName = \"/Users/kamal/Downloads/my-app/src/chart.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst timeArray = [{\n  display: \"1 Minute\",\n  val: \"1m\"\n}, {\n  display: \"15 Minutes\",\n  val: \"15m\"\n}, {\n  display: \"1 hour\",\n  val: \"1h\"\n}];\nconst options = {\n  theme: \"light2\",\n  // \"light1\", \"light2\", \"dark1\", \"dark2\"\n  animationEnabled: true,\n  exportEnabled: true,\n  title: {\n    text: \"Market Details\"\n  },\n  axisX: {\n    valueFormatString: \"h\"\n  },\n  axisY: {\n    includeZero: false,\n    prefix: \"$\",\n    title: \"Price (in USD)\"\n  },\n  data: [{\n    type: \"candlestick\",\n    showInLegend: true,\n    name: \"coindcx\",\n    yValueFormatString: \"$###0.00\",\n    // xValueFormatString: \"MMMM YYYY\",\n    xValueType: \"dateTime\",\n    dataPoints: []\n  }]\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getChartData = () => {\n      let interval = this.state.selectedItemVal;\n      let chart = this.chart;\n      fetch('/market_data/candles?pair=B-BTC_USDT&interval=' + interval + '&limit=50').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        let dataPoints = [];\n        data.forEach(val => {\n          dataPoints.push({\n            x: val.time,\n            y: [val.open, val.high, val.low, val.close]\n          });\n        });\n        chart.options.data[0].dataPoints = dataPoints;\n        chart.render();\n      });\n    };\n\n    this.toggle = () => {\n      let dropdownOpen = this.state.dropdownOpen;\n      this.setState({\n        dropdownOpen: !dropdownOpen\n      });\n    };\n\n    this.setSelectedItem = item => {\n      this.setState({\n        selectedItemDisplay: item.display,\n        selectedItemVal: item.val\n      }, function () {\n        this.getChartData();\n      });\n    };\n\n    this.getDropdownItems = () => {\n      let items = [];\n      timeArray.forEach((item, index) => {\n        items.push(React.createElement(DropdownItem, {\n          key: index,\n          active: item.val === this.state.selectedItemVal,\n          onClick: () => this.setSelectedItem(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, item.display));\n      });\n      return items;\n    };\n\n    this.state = {\n      candleChartData: [],\n      stateOptions: options,\n      dropdownOpen: false,\n      selectedItemVal: \"1m\",\n      selectedItemDisplay: \"1 Minute\"\n    };\n  }\n\n  componentDidMount() {\n    this.getChartData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.selectedItemDisplay), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.getDropdownItems()))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: this.state.stateOptions,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/kamal/Downloads/my-app/src/chart.js"],"names":["React","Component","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","CanvasJSReact","CanvasJS","CanvasJSChart","timeArray","display","val","options","theme","animationEnabled","exportEnabled","title","text","axisX","valueFormatString","axisY","includeZero","prefix","data","type","showInLegend","name","yValueFormatString","xValueType","dataPoints","Chart","constructor","props","getChartData","interval","state","selectedItemVal","chart","fetch","then","response","json","forEach","push","x","time","y","open","high","low","close","render","toggle","dropdownOpen","setState","setSelectedItem","item","selectedItemDisplay","getDropdownItems","items","index","candleChartData","stateOptions","componentDidMount","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst timeArray = [{display :\"1 Minute\", val: \"1m\"}, \n                    {display:\"15 Minutes\", val:\"15m\"}, \n                    {display:\"1 hour\", val:\"1h\"}];\nconst options = {\n    theme: \"light2\", // \"light1\", \"light2\", \"dark1\", \"dark2\"\n    animationEnabled: true,\n    exportEnabled: true,\n    title:{\n        text: \"Market Details\"\n    },\n    axisX: {\n        valueFormatString: \"h\"\n    },\n    axisY: {\n        includeZero:false,\n        prefix: \"$\",\n        title: \"Price (in USD)\"\n    },\n    data: [{\n        type: \"candlestick\",\n        showInLegend: true,\n        name: \"coindcx\",\n        yValueFormatString: \"$###0.00\",\n        // xValueFormatString: \"MMMM YYYY\",\n        xValueType: \"dateTime\",\n        dataPoints: []\n    }\n  ]\n}\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            candleChartData : [],\n            stateOptions : options,\n            dropdownOpen : false,\n            selectedItemVal : \"1m\",\n            selectedItemDisplay : \"1 Minute\"\n        }\n    }\n    \n    componentDidMount(){\n        this.getChartData();\n    }\n\n    getChartData = () => {\n        let interval = this.state.selectedItemVal ;\n        let chart = this.chart;\n\t\tfetch('/market_data/candles?pair=B-BTC_USDT&interval='+interval+'&limit=50')\n\t\t.then(function(response) {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then(function(data) {\n            let dataPoints = [];\n\t\t\tdata.forEach(val => {\n                dataPoints.push({x: val.time,\n                                    y: [val.open, val.high, val.low, val.close]})\n                })\n            chart.options.data[0].dataPoints = dataPoints;\n\t\t\tchart.render();\n        });\n    }\n\n    toggle = () => {\n        let dropdownOpen = this.state.dropdownOpen;\n        this.setState({dropdownOpen : !dropdownOpen});\n    }\n    setSelectedItem = (item) => {\n        this.setState({selectedItemDisplay : item.display, selectedItemVal : item.val},\n            function(){this.getChartData();});\n    }\n\n    getDropdownItems = () => {\n        let items = [];\n        timeArray.forEach((item, index) => {\n            items.push((<DropdownItem key={index} \n                                      active = {item.val === this.state.selectedItemVal}\n                                      onClick = {() => this.setSelectedItem(item)}>\n                            {item.display}\n                        </DropdownItem>))\n        })\n        return items;\n    }\n\n\trender() {\n\t\treturn (\n\t\t<div>\n            <div>\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                    <DropdownToggle caret>\n                        {this.state.selectedItemDisplay}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        {this.getDropdownItems()}\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n            <div>\n                <CanvasJSChart options = {this.state.stateOptions}\n                    onRef={ref => this.chart = ref}\n                />\n            </div>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n\t}\n}\nexport default Chart;                             "]},"metadata":{},"sourceType":"module"}